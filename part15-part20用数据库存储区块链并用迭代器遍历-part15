part15 :创建创世区块存储到数据库


1、Blockchain区块链对象--》 1.数据库   2.最新区块的hash
2、在数据库中   1、每一个hash对应一个block   2、再存储一个最新区块的hash用于遍历区块链
                                            b.Put([]byte("l"),genesisBlock.Hash)

blockchain.go
type Blockchain struct{
	Tip  []byte //最新的区块的Hash
	DB  *bolt.DB
}
//1.创建带有创世区块的区块链
func CreateBlockchainWithGenesisBlock()*Blockchain{
	//创建或者打开数据库
	db, err := bolt.Open(dbName, 0600, nil)
	if err != nil {
		log.Fatal(err)
	}
	var  blockHash  []byte
	err=db.Update(func(tx *bolt.Tx) error {
		//先获取表
		b:=tx.Bucket([]byte(blockTableName))
		//如果没有之前创建表
		if  b==nil{
			//创建创建数据库表
			b,err=tx.CreateBucket([]byte(blockTableName))
			if err!=nil{
				log.Panic(err)
			}
		}
		if b!=nil{
			//创建创世区块
			genesisBlock:=CreateGensisBlock("Genesis Data............")
			//将创世区块存储到表中
			err:=b.Put(genesisBlock.Hash,genesisBlock.Serialize())
			if err!=nil{
				log.Panic(err)

			}
			//存储最新的区块的hash
			err=b.Put([]byte("l"),genesisBlock.Hash)
			if err!=nil{
				log.Panic(err)

			}
			blockHash=genesisBlock.Hash
		}
		return  nil

	})

	 return &Blockchain{blockHash,db}

}


